{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst UseForm = (initialData, onValidate) => {\n  _s();\n  /*\n  contiene toda la informacion del formulario se inicia con el parametro\n  initialData para poder usarlo en otro formulario que se pueda creear despues\n  */\n  const [form, setForm] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  //funcion para cuando hayan cambios\n  const handleChange = e => {\n    setForm({\n      ...form,\n      //el contenido de la variable form agrega lo ingresado\n      [e.target.name]: e.target.value // edita la propiedad de name y le agrega el valor value\n    });\n  };\n\n  //funcion para cuando se envia el formulario\n  const handleSubmit = e => {\n    e.preventDefault(); //evita que la pagina se refresque \n    const err = onValidate(form);\n    setErrors(err);\n    console.log(Object.keys(err).length);\n    if (Object.keys(err).length === 0) {\n      console.log(\"enviando...\");\n    }\n  };\n\n  //retorna estas variables para poder usarlas en el formulario\n  return {\n    form,\n    errors,\n    loading,\n    handleChange,\n    handleSubmit\n  };\n};\n_s(UseForm, \"GcC/OSj6hvpeFhB9sLxEtbbTVcI=\");\n_c = UseForm;\nexport default UseForm;\nvar _c;\n$RefreshReg$(_c, \"UseForm\");","map":{"version":3,"names":["useState","UseForm","initialData","onValidate","form","setForm","loading","setLoading","errors","setErrors","handleChange","e","target","name","value","handleSubmit","preventDefault","err","console","log","Object","keys","length"],"sources":["/home/revvitx/workspace/formulario-ract/src/components/UseForm.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst UseForm = (initialData, onValidate) => { \n    \n    /*\n    contiene toda la informacion del formulario se inicia con el parametro\n    initialData para poder usarlo en otro formulario que se pueda creear despues\n    */\n    const [form, setForm] = useState(initialData);\n\n\n    const [loading, setLoading] = useState(false);\n\n    const [errors, setErrors] = useState({});\n\n    //funcion para cuando hayan cambios\n    const handleChange = (e) => {\n        setForm({\n            ...form,        //el contenido de la variable form agrega lo ingresado\n            [e.target.name] : e.target.value    // edita la propiedad de name y le agrega el valor value\n        })\n    };\n    \n    //funcion para cuando se envia el formulario\n    const handleSubmit = (e) => {\n        e.preventDefault();      //evita que la pagina se refresque \n        const err = onValidate(form)\n        setErrors(err)\n        \n        console.log(Object.keys(err).length);\n        \n        if(Object.keys(err).length === 0){\n            console.log(\"enviando...\")\n        }\n    };\n\n    //retorna estas variables para poder usarlas en el formulario\n    return {form, errors,loading,handleChange, handleSubmit}\n\n    \n}\n \nexport default UseForm;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAG,CAACC,WAAW,EAAEC,UAAU,KAAK;EAAA;EAEzC;AACJ;AACA;AACA;EACI,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAACE,WAAW,CAAC;EAG7C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMU,YAAY,GAAIC,CAAC,IAAK;IACxBN,OAAO,CAAC;MACJ,GAAGD,IAAI;MAAS;MAChB,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAIF,CAAC,CAACC,MAAM,CAACE,KAAK,CAAI;IACxC,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IACxBA,CAAC,CAACK,cAAc,EAAE,CAAC,CAAM;IACzB,MAAMC,GAAG,GAAGd,UAAU,CAACC,IAAI,CAAC;IAC5BK,SAAS,CAACQ,GAAG,CAAC;IAEdC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,MAAM,CAAC;IAEpC,IAAGF,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,MAAM,KAAK,CAAC,EAAC;MAC7BJ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC9B;EACJ,CAAC;;EAED;EACA,OAAO;IAACf,IAAI;IAAEI,MAAM;IAACF,OAAO;IAACI,YAAY;IAAEK;EAAY,CAAC;AAG5D,CAAC;AAAA,GAtCKd,OAAO;AAAA,KAAPA,OAAO;AAwCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}